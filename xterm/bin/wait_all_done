#!/usr/bin/env bash

# set -e: exit asap if a command exits with a non-zero status
set -e

echoerr() { printf "%s\n" "$*" >&2; }

# print error and exit
die () {
  echoerr "ERROR: $1"
  # if $2 is defined AND NOT EMPTY, use $2; otherwise, set to "22"
  errnum=${2-22}
  exit $errnum
}

# if $1 is defined AND NOT EMPTY, use $1; otherwise, set to "7s"
WAIT_TIMEOUT=${1-9s}
LOOP_SCRIPT_PATH="${BIN_UTILS}/wait-xterm.sh"

# default $TAIL_LOG_LINES when not provided
TAIL_LOG_LINES=${TAIL_LOG_LINES-50}

if [ ! -f "${LOOP_SCRIPT_PATH}" ]; then
  die "Need '${LOOP_SCRIPT_PATH}' to exist!"
fi

# Avoid waiting forever using the `timeout` command
if timeout --foreground ${WAIT_TIMEOUT} ${LOOP_SCRIPT_PATH}; then
  echo ""
  if [ -f /var/log/cont/vnc-stdout.log ]; then
    grep 'password' /var/log/cont/vnc-stdout.log || true
  fi
  grep 'IP:' /var/log/cont/xterm-stdout.log || die "Failed to grep IP:"
  echo -e "Selenium all done and ready for testing!"
else
  echo "" && echo "" && echo "==> logs tailed by +- ${TAIL_LOG_LINES} <=="
  bash -c 'tail --lines=${TAIL_LOG_LINES} /var/log/cont/*' || true
  echo "" && echo "" && echo "==> ls -la /var/log/cont/* <=="
  bash -c 'ls -la /var/log/cont/*' || true
  echo "" && echo "" && echo "==> errors <=="
  bash -c 'errors' || true

  die "
   Your docker-selenium didn't start properly.
  "
fi
