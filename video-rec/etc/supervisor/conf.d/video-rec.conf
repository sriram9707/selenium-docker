[program:video-rec]

;The relative priority of the program in the start and shutdown ordering.
;Lower priorities indicate programs that start first and shut down last.
priority=85

;User to run-as, note environment expansion outside of `command` is only
;supported in supervisor >= 3.2
;user=seluser

;The command that will be run when this program is started.
;Controlled programs should themselves not be daemons, as supervisord
;assumes it is responsible for daemonizing its subprocesses
directory=/home/seluser
command=%(ENV_BIN_UTILS)s/start-video-rec.sh

;If true, this program will start automatically when supervisord is started.
;default=true
;autostart=%(ENV_VIDEO)s
autostart=false

;If false, the process will never be autorestarted.
;If true, the process will be unconditionally restarted when it exits,
;without regard to its exit code. default=unexpected
;If unexpected, the process will be restart when the program exits with an
;exit code that is not one of the exit codes associated with this process.
autorestart=false

;Set to 0 to indicate that the program neednâ€™t stay running for any
;particular amount of time.
;So using custom wait-xxxx.sh scripts to perform a more efficient
;active waiting until https://github.com/Supervisor/supervisor/issues/584
startsecs=0

;The number of serial failure attempts that supervisord will allow when
;attempting to start the program before giving up and puting the process
;into an FATAL state.
startretries=0

;Logs
redirect_stderr=false
stdout_logfile=%(ENV_LOGS_DIR)s/video-rec-stdout.log
stderr_logfile=%(ENV_LOGS_DIR)s/video-rec-stderr.log
stdout_logfile_maxbytes=%(ENV_LOGFILE_MAXBYTES)s
stderr_logfile_maxbytes=%(ENV_LOGFILE_MAXBYTES)s
stdout_logfile_backups=%(ENV_LOGFILE_BACKUPS)s
stderr_logfile_backups=%(ENV_LOGFILE_BACKUPS)s
stdout_capture_maxbytes=%(ENV_LOGFILE_MAXBYTES)s
stderr_capture_maxbytes=%(ENV_LOGFILE_MAXBYTES)s

;The signal used to kill the program when a stop is requested. This can be
;any of TERM, HUP, INT, QUIT, KILL, USR1, or USR2. default=TERM
stopsignal=%(ENV_VIDEO_REC_STOP_SIGNAL)s

;The number of seconds to wait for the OS to return a SIGCHILD to
;supervisord after the program has been sent a stopsignal.
;If this number of seconds elapses before supervisord receives a SIGCHILD
;from the process, supervisord will attempt to kill it with a final.
;default=10
stopwaitsecs=%(ENV_VIDEO_STOPWAITSECS)s

;If true, the flag causes supervisor to send the stop signal to
;the whole process group and implies killasgroup is true.
;This is useful for programs, such as Flask in debug mode,
;that do not propagate stop signals to their children,
;leaving them orphaned.
;default=false
stopasgroup=true
